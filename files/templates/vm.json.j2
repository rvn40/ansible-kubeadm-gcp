{
  "canIpForward": false,
  "confidentialInstanceConfig": {
    "enableConfidentialCompute": false
  },
  "deletionProtection": false,
  "description": "",
  "disks": [
    {
      "autoDelete": true,
      "boot": true,
      "deviceName": "{{ vm_node.name }}",
      "diskEncryptionKey": {},
      "initializeParams": {
        "diskSizeGb": "{{ vm_node.disk_size }}",
        "diskType": "projects/{{ vm.project }}/zones/{{ vm.region }}-{{ vm_node.zone }}/diskTypes/pd-balanced",
        "labels": {},
        "sourceImage": "{{ vm_node.os }}"
      },
      "mode": "READ_WRITE",
      "type": "PERSISTENT"
    }
  ],
  "displayDevice": {
    "enableDisplay": false
  },
  "guestAccelerators": [],
  "keyRevocationActionType": "NONE",
  "labels": {
    "ec-src": "vm_add-rest"
  },
  "machineType": "projects/{{ vm.project }}/zones/{{ vm.region }}-{{ vm_node.zone }}/machineTypes/{{ vm_node.type }}",
  "metadata": {
    "items": [
      {
        "key": "startup-script",
        "value": "#!/bin/bash\n\n# Define the username and password\nusername=\"ansible\"\npassword=\"ansible123\"\n\n# Check if the user already exists\nif id \"$username\" >/dev/null 2>&1; then\n  echo \"User $username already exists.\"\nelse\n  # Create the user\n  useradd -m -s /bin/bash \"$username\"\n  echo \"$username:$password\" | chpasswd\n  usermod -a -G sudo \"$username\"\n  sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config\n  echo \"User $username created with password $password.\"\nfi"
      }
    ]
  },
  "name": "{{ vm_node.name }}",
  "networkInterfaces": [
    {
      "accessConfigs": [
        {
          "name": "External NAT",
          "networkTier": "STANDARD"
        }
      ],
      "networkIP": "{{ vm_node.internal_ip }}",
      "stackType": "IPV4_ONLY",
      "subnetwork": "projects/{{ vm.project }}/regions/{{ vm.region }}/subnetworks/default"
    }
  ],
  "params": {
    "resourceManagerTags": {}
  },
  "reservationAffinity": {
    "consumeReservationType": "ANY_RESERVATION"
  },
  "scheduling": {
    "automaticRestart": false,
    "instanceTerminationAction": "STOP",
    "onHostMaintenance": "TERMINATE",
    "provisioningModel": "SPOT"
  },
  "serviceAccounts": [
    {
      "email": "{{ auth.email }}",
      "scopes": [
        "https://www.googleapis.com/auth/devstorage.read_only",
        "https://www.googleapis.com/auth/logging.write",
        "https://www.googleapis.com/auth/monitoring.write",
        "https://www.googleapis.com/auth/servicecontrol",
        "https://www.googleapis.com/auth/service.management.readonly",
        "https://www.googleapis.com/auth/trace.append"
      ]
    }
  ],
  "shieldedInstanceConfig": {
    "enableIntegrityMonitoring": true,
    "enableSecureBoot": false,
    "enableVtpm": true
  },
  "tags": {
    "items": [
      "default-allowall-internal",
      "god-mode"
    ]
  },
  "zone": "projects/{{ vm.project }}/zones/{{ vm.region }}-{{ vm_node.zone }}"
}